#!/usr/bin/env php
<?php
/**
 * This file is part of Railt package.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
declare(strict_types=1);

use Railt\Discovery\Discovery;
use Symfony\Component\Console\Application;

/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader
| for our application. We just need to utilize it! We'll require it
| into the script here so that we do not have to worry about the
| loading of any our classes "manually". Feels great to relax.
|
*/

foreach ([
    __DIR__ . '/../vendor/autoload.php',
    __DIR__ . '/../../../autoload.php',
] as $path) {
    if (\is_file($path) && \is_readable($path)) {
        /** @var \Composer\Autoload\ClassLoader $classLoader */
        $classLoader = require_once $path;
        break;
    }
}

// Check dependencies
if (! \class_exists(Application::class)) {
    throw new \LogicException('Please install "symfony/console" first.');
}

/*
|--------------------------------------------------------------------------
| Run The Console Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$cli = new Application();

$loader = Discovery::fromClassLoader($classLoader);

foreach ((array)$loader->get('railt.commands', []) as $command) {
    $cli->add(new $command());
}

try {
    $code = $cli->run();
} catch (Throwable $e) {
    echo $e;
    $code = $e->getCode() ?: 1;
} finally {
    exit($code);
}
